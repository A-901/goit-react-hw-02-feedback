{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Stats/Stats.module.css","components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Stats/Stats.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","components/App/App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","good","neutral","bad","className","Styles","feedbackSection","feedbackButton","type","onClick","name","data-value","Stats","status","value","item","Statistics","total","positivePercentage","statistics","Section","title","children","section","Notification","message","App","state","handleBtnClick","e","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","this","percentage","Number","toFixed","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2079c41e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackSection\":\"FeedbackOptions_feedbackSection__vXKlH\",\"feedbackButton\":\"FeedbackOptions_feedbackButton__3Tunm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Stats_item__qBp2Y\",\"status\":\"Stats_status__1jUit\",\"value\":\"Stats_value__2x_b4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__3tmu-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3o0oJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Notification_title__1IfTL\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Styles from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  const { good, neutral, bad } = options;\r\n  return (\r\n    <div className={Styles.feedbackSection}>\r\n      <button\r\n        className={Styles.feedbackButton}\r\n        type=\"button\"\r\n        onClick={onLeaveFeedback}\r\n        name=\"good\"\r\n        data-value={good}\r\n      >\r\n        Good\r\n      </button>\r\n      <button\r\n        className={Styles.feedbackButton}\r\n        type=\"button\"\r\n        onClick={onLeaveFeedback}\r\n        name=\"neutral\"\r\n        data-value={neutral}\r\n      >\r\n        Neutral\r\n      </button>\r\n      <button\r\n        className={Styles.feedbackButton}\r\n        type=\"button\"\r\n        onClick={onLeaveFeedback}\r\n        name=\"bad\"\r\n        data-value={bad}\r\n      >\r\n        Bad\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.shape({\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\nexport default FeedbackOptions;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Styles from './Stats.module.css';\r\n\r\nconst Stats = ({ status, value }) => (\r\n  <li className={Styles.item}>\r\n    <span className={Styles.status}>{status}</span>\r\n    {status !== 'Positive feedback' ? (\r\n      <div className={Styles.value}>{value}</div>\r\n    ) : (\r\n      <div className={Styles.value}>{value} &#37;</div>\r\n    )}\r\n  </li>\r\n);\r\nStats.propTypes = {\r\n  status: PropTypes.string.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\nexport default Stats;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Stats from '../Stats/Stats';\r\nimport Styles from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <ul className={Styles.statistics}>\r\n    <li>\r\n      <h3 >Statistics</h3>\r\n    </li>\r\n    <Stats status=\"Good\" value={good} />\r\n    <Stats status=\"Neutral\" value={neutral} />\r\n    <Stats status=\"Bad\" value={bad} />\r\n    <Stats status=\"Total\" value={total} />\r\n    <Stats status=\"Positive feedback\" value={positivePercentage} />\r\n  </ul>\r\n);\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section className={Styles.section}>\r\n    <h2 >{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Styles from './Notification.module.css';\r\n\r\nexport default function Notification({ message }) {\r\n  return (\r\n    <div>\r\n      <h2 className={Styles.title}>{message}</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};","import React, { Component } from 'react';\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\nimport Statistics from '../Statistics/Statistics';\nimport Section from '../Section/Section';\nimport Notification from '../Notification/Notification';\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleBtnClick = e => {\n    const { name } = e.target;\n    this.setState(prevState => ({ [name]: prevState[name] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    return (good / this.countTotalFeedback()) * 100;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const percentage = Number(\n      this.countPositiveFeedbackPercentage().toFixed(0),\n    );\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.handleBtnClick}\n          />\n          {this.countTotalFeedback() < 1 ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={percentage}\n            />\n          )}\n        </Section>\n      </>\n    );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}